# Grammar for the pgen parser specification language
#
# This was used to bootstrap the parser for the emu-grammar parser
# specification language, and it's not clear why we should have two things.
# Ignore this for now.

var token IDENT;
var token STR;
token Eq = "=";
token Arrow = "=>";
token Semi = ";";
token Token = "token";
token Var = "var";
token Nt = "nt";
token Goal = "goal";
token OpenBrace = "{";
token CloseBrace = "}";
token QuestionMark = "?";

goal nt grammar {
    token_defs? nt_defs => grammar;
}

nt token_defs {
    token_def => single;
    token_defs token_def => append;
}

nt token_def {
    "token" IDENT "=" STR ";" => const_token;
    "var" "token" IDENT ";" => var_token;
}

nt nt_defs {
    nt_def => nt_defs_single;
    nt_defs nt_def => nt_defs_append;
}

nt nt_def {
    "goal"? "nt" IDENT "{" prods? "}" => nt_def;
}

nt prods {
    prod => single;
    prods prod => append;
}

nt prod {
    terms action? ";" => prod;
}

nt terms {
    term => single;
    terms term => append;
}

nt term {
    symbol;
    symbol "?" => optional;
}

nt symbol {
    IDENT => ident;
    STR => str;
}

nt action {
    "=>" IDENT => action;
}
