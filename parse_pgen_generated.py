import pgen_runtime

actions = [
    {'goal': 1, 'nt': 2},
    {'nt': 5},
    {'IDENT': 6},
    {'nt': -1, None: -1, 'goal': -1},
    {'goal': 1, 'nt': 2, None: -9223372036854775807},
    {'IDENT': 8},
    {'{': 9},
    {'nt': -2, None: -2, 'goal': -2},
    {'{': 10},
    {'IDENT': 11, '}': 12, 'STR': 13},
    {'}': 19, 'IDENT': 11, 'STR': 13},
    {'IDENT': -14, '?': -14, 'STR': -14, ';': -14},
    {'nt': -3, None: -3, 'goal': -3},
    {'IDENT': -15, '?': -15, 'STR': -15, ';': -15},
    {'STR': 13, 'IDENT': 11, ';': 21},
    {'IDENT': -10, 'STR': -10, ';': -10},
    {'STR': 13, 'IDENT': 11, '}': 23},
    {'IDENT': -7, 'STR': -7, '}': -7},
    {'?': 25, 'IDENT': -12, 'STR': -12, ';': -12},
    {'nt': -5, None: -5, 'goal': -5},
    {'STR': 13, '}': 26, 'IDENT': 11},
    {'IDENT': -9, 'STR': -9, '}': -9},
    {'IDENT': -11, 'STR': -11, ';': -11},
    {'nt': -4, None: -4, 'goal': -4},
    {'IDENT': -8, 'STR': -8, '}': -8},
    {'IDENT': -13, 'STR': -13, ';': -13},
    {'nt': -6, None: -6, 'goal': -6},
]

ctns = [
    {'nt_def': 3, 'grammar': 4},
    {},
    {},
    {},
    {'nt_def': 7},
    {},
    {},
    {},
    {},
    {'terms': 14, 'term': 15, 'prods': 16, 'prod': 17, 'symbol': 18},
    {'terms': 14, 'term': 15, 'prods': 20, 'prod': 17, 'symbol': 18},
    {},
    {},
    {},
    {'term': 22, 'symbol': 18},
    {},
    {'symbol': 18, 'term': 15, 'terms': 14, 'prod': 24},
    {},
    {},
    {},
    {'symbol': 18, 'term': 15, 'terms': 14, 'prod': 24},
    {},
    {},
    {},
    {},
    {},
    {},
]

reductions = [
    ('grammar', 1, lambda x0: ('grammar', 0, [x0])),
    ('grammar', 2, lambda x0, x1: ('grammar', 1, [x0, x1])),
    ('nt_def', 4, lambda x0, x1, x2, x3: ('nt_def', 0, [x0, x1, x2, None, x3])),
    ('nt_def', 5, lambda x0, x1, x2, x3, x4: ('nt_def', 0, [x0, x1, x2, x3, x4])),
    ('nt_def', 5, lambda x0, x1, x2, x3, x4: ('nt_def', 1, [x0, x1, x2, x3, None, x4])),
    ('nt_def', 6, lambda x0, x1, x2, x3, x4, x5: ('nt_def', 1, [x0, x1, x2, x3, x4, x5])),
    ('prods', 1, lambda x0: ('prods', 0, [x0])),
    ('prods', 2, lambda x0, x1: ('prods', 1, [x0, x1])),
    ('prod', 2, lambda x0, x1: ('prod', 0, [x0, x1])),
    ('terms', 1, lambda x0: ('terms', 0, [x0])),
    ('terms', 2, lambda x0, x1: ('terms', 1, [x0, x1])),
    ('term', 1, lambda x0: ('term', 0, [x0])),
    ('term', 2, lambda x0, x1: ('term', 1, [x0, x1])),
    ('symbol', 1, lambda x0: ('symbol', 0, [x0])),
    ('symbol', 1, lambda x0: ('symbol', 1, [x0])),
    ('grammar_1', 1, lambda x0: ('grammar_1', 0, [x0])),
]

parse_grammar = pgen_runtime.make_parse_fn(actions, ctns, reductions, 0)
